// generator client {
//   provider = "prisma-client-js"
// }


generator client {
  provider        = "prisma-client-js"
  // previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl         = env("DIRECT_URL")
}

enum EcommerceCode {
  B2B
  B2C
  B2G
  G2B
  G2C
  G2G
  C2C
  C2G
}

model ecommerce_model {
  id_ecommerce_model Int           @id @default(autoincrement())
  code               EcommerceCode
  description        String?
  status             Status?       @default(Activo)
}

model canton_ce {
  id                BigInt      @id @default(autoincrement()) @map("id_canton")
  creation_date     DateTime?   @db.Timestamp(6)
  creation_user     String?     @db.VarChar(255)
  modification_date DateTime?   @db.Timestamp(6)
  modification_user String?     @db.VarChar(255)
  nombre            String?     @db.VarChar(255)
  observation       String?     @db.VarChar(255)
  status            Status?     @default(Activo)
  provinceId        BigInt      @map("province_id")
  province_ce       province_ce @relation(fields: [provinceId], references: [id_province], onDelete: NoAction, onUpdate: NoAction, map: "fkccbjfj868fde05vy8i6kqyy4n")
  user_ce           user_ce[]
}

model cart_item {
  id_cart_item     BigInt        @id @default(autoincrement())
  price            Float
  quantity         Int
  product_id       BigInt
  shopping_cart_id BigInt
  status           Status?       @default(Activo)
  shopping_cart    shopping_cart @relation(fields: [shopping_cart_id], references: [id_shopping_cart], onDelete: NoAction, onUpdate: NoAction, map: "fke89gjdx91fxnmkkssyoim8xfu")
  product          product       @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkjcyd5wv4igqnw413rgxbfu4nv")

  // @@index([shopping_cart_id, product_id], name: "cart_item_product_id_shopping_cart_id")
}

model comment_ce {
  id_comment        BigInt    @id @default(autoincrement())
  comentario        String?   @db.VarChar(255)
  creation_date     DateTime? @db.Timestamp(6)
  creation_user     String?   @db.VarChar(255)
  modification_date DateTime? @db.Timestamp(6)
  modification_user String?   @db.VarChar(255)
  observation       String?   @db.VarChar(255)
  rating            Int       @default(1)
  status            Status?   @default(Activo)
  product_id        BigInt
  user_id           BigInt
  product           product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk890uvttwi2ikpr3ingawiv5er")
  user_ce           user_ce   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkj7u9fw1m5nvki4wje3u4xp8yt")
}

model inventory_ce {
  id_inventory      BigInt    @id @default(autoincrement())
  cantidad          Int
  creation_date     DateTime? @db.Timestamp(6)
  creation_user     String?   @db.VarChar(255)
  modification_date DateTime? @db.Timestamp(6)
  modification_user String?   @db.VarChar(255)
  observation       String?   @db.VarChar(255)
  status            Status?   @default(Activo)
  producto_id       BigInt?
  product           product?  @relation(fields: [producto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkaegxmlmlbxx00uk4yiiw3bon5")
}

model order_ce {
  id_order          BigInt         @id @default(autoincrement())
  creation_date     DateTime?      @default(now()) @db.Timestamp(6)
  creation_user     String?        @db.VarChar(255)
  modification_date DateTime?      @db.Timestamp(6)
  modification_user String?        @db.VarChar(255)
  observation       String?        @db.VarChar(255)
  order_date        DateTime?      @db.Timestamp(6)
  payment_method    String?        @db.VarChar(255)
  paypal_payment_id String?        @unique @db.VarChar(255)
  status            Status?        @default(Activo)
  total             Float
  buyer_id          BigInt
  user_ce           user_ce        @relation(fields: [buyer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk5615ygh96uhycaxxf7v61docr")
  order_detail      order_detail[]
}

model order_detail {
  id_order_detail   BigInt    @id @default(autoincrement())
  creation_date     DateTime? @db.Timestamp(6)
  creation_user     String?   @db.VarChar(255)
  guia              String?
  modification_date DateTime? @db.Timestamp(6)
  modification_user String?   @db.VarChar(255)
  observation       String?   @db.VarChar(255)
  quantity          Int?
  subtotal          Float?
  unit_price        Float?
  order_id          BigInt?
  product_id        BigInt?
  seller_id         BigInt?
  status            Status?   @default(Activo)
  product           product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkb8bg2bkty0oksa3wiq5mp5qnc")
  user_ce           user_ce?  @relation(fields: [seller_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkqtp5mijhv0wh8c02j69xhpy9q")
  order_ce          order_ce? @relation(fields: [order_id], references: [id_order], onDelete: NoAction, onUpdate: NoAction, map: "fktrbelsls34mclih6jqmd58yio")
}

model pais_ce {
  id_pais           BigInt    @id @default(autoincrement())
  creation_date     DateTime? @db.Timestamp(6)
  creation_user     String?   @db.VarChar(255)
  modification_date DateTime? @db.Timestamp(6)
  modification_user String?   @db.VarChar(255)
  name              String?   @db.VarChar(255)
  observation       String?   @db.VarChar(255)
  status            Status?   @default(Activo)
  user_ce           user_ce[]
}

model predefined_product {
  id                BigInt           @id @default(autoincrement()) @map("id_predefined_product")
  creation_date     DateTime?        @db.Timestamp(6)
  creation_user     String?          @db.VarChar(255)
  modification_date DateTime?        @db.Timestamp(6)
  modification_user String?          @db.VarChar(255)
  name              String?          @db.VarChar(255)
  observation       String?          @db.VarChar(255)
  status            Status?          @default(Activo)
  category_id       BigInt
  category          product_category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkka69txquqjfcwaj8e12o77hod")
  product           product[]
}

model product {
  id                  BigInt             @id @default(autoincrement()) @map("id_product")
  creation_date       DateTime?          @default(now()) @db.Timestamp(6)
  creation_user       String?            @db.VarChar(255)
  description         String?            @db.VarChar(255)
  image               String?
  modification_date   DateTime?          @updatedAt @db.Timestamp(6)
  modification_user   String?            @db.VarChar(255)
  price               Float
  status              Status?            @default(Activo)
  stock               Int
  predefinedProductId BigInt             @map("predefined_product_id")
  seller_id           BigInt
  unitOfMeasureId     BigInt             @map("unit_of_measure_id")
  cart_item           cart_item[]
  comment_ce          comment_ce[]
  inventory_ce        inventory_ce[]
  order_detail        order_detail[]
  unitOfMeasure       unit_of_measure    @relation(fields: [unitOfMeasureId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk6fgxdc9vsscckaq27yi5h31ni")
  user_ce             user_ce            @relation(fields: [seller_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk82lof3v9dmjvn85f5q7t6faqy")
  predefinedProduct   predefined_product @relation(fields: [predefinedProductId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkay92br6je682bx1q56v5w7tge")
}

model product_category {
  id                 BigInt               @id @default(autoincrement()) @map("id_product_category")
  creation_date      DateTime?            @db.Timestamp(6)
  creation_user      String?              @db.VarChar(255)
  description        String?              @db.VarChar(255)
  modification_date  DateTime?            @db.Timestamp(6)
  modification_user  String?              @db.VarChar(255)
  name               String?              @db.VarChar(255)
  observation        String?              @db.VarChar(255)
  status             Status?              @default(Activo)
  predefined_product predefined_product[]
}

model province_ce {
  id_province       BigInt      @id @default(autoincrement())
  creation_date     DateTime?   @db.Timestamp(6)
  creation_user     String?     @db.VarChar(255)
  modification_date DateTime?   @db.Timestamp(6)
  modification_user String?     @db.VarChar(255)
  name              String?     @db.VarChar(255)
  observation       String?     @db.VarChar(255)
  status            Status?     @default(Activo)
  canton_ce         canton_ce[]
}

model role_ce {
  id_role           BigInt      @id @default(autoincrement())
  creation_date     DateTime?   @db.Timestamp(6)
  creation_user     String?     @db.VarChar(255)
  modification_date DateTime?   @db.Timestamp(6)
  modification_user String?     @db.VarChar(255)
  name              String?     @db.VarChar(255)
  observation       String?     @db.VarChar(255)
  status            Status?     @default(Activo)
  user_role         user_role[]
}

model shopping_cart {
  id_shopping_cart  BigInt      @id @default(autoincrement())
  creation_date     DateTime?   @db.Timestamp(6)
  creation_user     String?     @db.VarChar(255)
  modification_date DateTime?   @db.Timestamp(6)
  modification_user String?     @db.VarChar(255)
  observation       String?     @db.VarChar(255)
  status            Status?     @default(Activo)
  total             Float
  user_id           BigInt      @unique
  cart_item         cart_item[]
  user_ce           user_ce     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkdf818y2ko5m7nfxqglbhurr71")
}

model unit_of_measure {
  id                BigInt    @id @default(autoincrement()) @map("id_unit_of_measure")
  abreviature       String?   @db.VarChar(255)
  creation_date     DateTime? @db.Timestamp(6)
  creation_user     String?   @db.VarChar(255)
  modification_date DateTime? @db.Timestamp(6)
  modification_user String?   @db.VarChar(255)
  name              String?   @db.VarChar(255)
  status            Status?   @default(Activo)
  product           product[]
}

enum UserType {
  EMPRESA
  GOBIERNO
  CLIENTE
}

// model user_type {
//   id_user_type Int      @id @default(autoincrement())
//   name         UserType
//   status       Status?  @default(Activo)
// }

model user_ce {
  id                    BigInt          @id @default(autoincrement()) @map("id_user")
  address               String?         @db.VarChar(255)
  creation_date         DateTime?       @default(now()) @db.Timestamp(6)
  creation_user         String?         @db.VarChar(255)
  disabled              Boolean?        @default(false)
  email                 String?         @unique @db.VarChar(255)
  lastName              String?         @map("last_name") @db.VarChar(255)
  locked                Boolean?        @default(false)
  modification_date     DateTime?       @db.Timestamp(6)
  modification_user     String?         @db.VarChar(255)
  name                  String?         @db.VarChar(255)
  observation           String?         @db.VarChar(255)
  businessDescription   String?         @db.Text
  password              String?         @db.VarChar(255)
  paypalEmail           String?         @map("paypal_email") @db.VarChar(255)
  phone                 String?         @db.VarChar(255)
  status                Status?         @default(Activo)
  userType              UserType        @default(CLIENTE)
  cantonId              BigInt?         @map("canton_id")
  paisId                BigInt          @map("pais_id")
  userId                BigInt?         @map("user_id")
  isOnline              Boolean?        @default(false)
  allowPaypalPayments   Boolean?        @default(false)
  allowBankTransfers    Boolean?        @default(false)
  bankTransfersInfo     String?         @db.Text
  profilePicture        String?         @db.Text
  comment_ce            comment_ce[]
  order_ce              order_ce[]
  order_detail          order_detail[]
  product               product[]
  shopping_cart         shopping_cart?
  canton_ce             canton_ce?      @relation(fields: [cantonId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk395iojpxiq0lla330rmp7ptt3")
  pais_ce               pais_ce         @relation(fields: [paisId], references: [id_pais], onDelete: NoAction, onUpdate: NoAction, map: "fkcft99y1rb8pwg435besokbpbg")
  user_role             user_role[]
  chat_users_emisores   chat_users[]    @relation("chat_users_emisor_id")
  chat_users_receptores chat_users[]    @relation("chat_users_receptor_id")
  user_requests         user_requests[]
}

model chat_users {
  emisor_id BigInt  @default(autoincrement())
  emisor    user_ce @relation(name: "chat_users_emisor_id", fields: [emisor_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  receptor_id BigInt  @default(autoincrement())
  receptor    user_ce @relation(name: "chat_users_receptor_id", fields: [receptor_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  message_ce message_ce[]

  status Status? @default(Activo)

  @@id([emisor_id, receptor_id])
}

model message_ce {
  id_message            BigInt      @id @default(autoincrement())
  text_message          String      @db.VarChar(255)
  creation_date         DateTime    @default(now()) @db.Timestamp(6)
  creation_user         BigInt
  modification_date     DateTime?   @db.Timestamp(6)
  modification_user     String?     @db.VarChar(255)
  observation           String?     @db.VarChar(255)
  shipping_date         DateTime?   @db.Timestamp(6)
  status                Status?     @default(Activo)
  chat_users            chat_users? @relation(fields: [chat_usersEmisor_id, chat_usersReceptor_id], references: [emisor_id, receptor_id], onDelete: Cascade)
  chat_usersEmisor_id   BigInt
  chat_usersReceptor_id BigInt
}

model user_role {
  id      BigInt   @id @default(autoincrement())
  roleId  BigInt?  @map("role_id")
  userId  BigInt?  @map("user_id")
  user_ce user_ce? @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk3fl1jh1bo1pwjeouerc2ajvi5")
  role_ce role_ce? @relation(fields: [roleId], references: [id_role], onDelete: NoAction, onUpdate: NoAction, map: "fk94k0hj897tea8a6493lgux5w")
}

model user_requests {
  id_user_request Int       @id @default(autoincrement())
  user_id         BigInt
  title           String    @db.VarChar(100)
  description     String    @db.Text
  image           String?
  status          Status?   @default(Activo)
  creation_date   DateTime? @db.Timestamp(6)

  creation_user user_ce @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

enum Status {
  Activo
  Eliminado
}
